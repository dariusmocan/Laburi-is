method Triple(x: int) returns (r: int)
{
    var y := 2 * x;
    r := x + y;
    assert r == 3 * x;
}

method Triple(x: int) returns (r: int)
{
    if x == 0 {
        r := 0;
    } else {
        var y := 2 * x;
        r := x + y;
    }
    assert r == 3 * x;
}

method Triple(x: int) returns (r: int)
{
    if {
        case x < 18 =>
            var a, b := 2 * x, 4 * x;
            r := (a + b) / 2;
        case 0 <= x =>
            var y := 2 * x;
            r := x + y;
    }
    assert r == 3 * x;
}

method Minfake(x: int, y: int) returns (m: int)
ensures m <= x && m <= y
{
    if x <= y {
        m := x - 10;
    } else {
        m := y - 20;
    }
}

method Index(n: int) returns (i: int)
requires 1 <= n
ensures 0 <= i < n
{
    i := 0;
}

function Average (a: int , b: int) : int
requires 0 <= a && 0 <= b
{
    (a + b) / 2
}

predicate IsEven (x: int ) {
    x % 2 == 0
}
